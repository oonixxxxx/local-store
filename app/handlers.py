from email import message
from os import name
from aiogram import F, Router

from aiogram.filters import CommandStart, Command
from aiogram.utils.markdown import hbold
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton, Message
from aiogram.types.input_file import FSInputFile
from aiogram.fsm.state import StatesGroup, State
from aiogram.fsm.context import FSMContext

class Reg(StatesGroup):
    name = State()
    number = State()
    adress = State()
    articul = State()


#CONSTANS:
name = ''
adress = ''
articul = ''


'''
idias:
    –æ—á–∏—Å—Ç–∫–∞ –∫–æ—Ä–∑–∏–Ω—ã
'''

class Articules:
    articules_dict_name = {
        '563564645645': 'shoes 1',
        '5646764746746': 'shoes 2',
        '564465556666': 'shoes 3',
        '564465559999': 'shoes 4'
        }


    articules_dict_prize = {
        'shoes 1': '77$',
        'shoes 2': '86$',
        'shoes 3': '76$',
        'shoes 4': '97$'
    }



class Buttons: 
    menu_button = ReplyKeyboardMarkup(keyboard=[[KeyboardButton(text='–ö–æ—Ä–∑–∏–Ω–∞ üõí')],
                                        [KeyboardButton(text='–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –Ω–∞—Å üìÉ‚úèÔ∏è'), KeyboardButton(text='–ö–æ–Ω—Ç–∞–∫—Ç üì∞')]],
            resize_keyboard=True,
            input_field_placeholder='–í—ã–±–µ—Ä–∏—Ç–µ –ø—É–Ω—Ç –º–µ–Ω—é.')


    busket_button = ReplyKeyboardMarkup(keyboard=[
        [KeyboardButton(text='–í –º–µ–Ω—é')],
        [KeyboardButton(text='–î–æ–±–∞–≤–∏—Ç—å —Ç–æ–≤–∞—Ä'), KeyboardButton(text='–ü–µ—Ä–µ–π—Ç–∏ –∫ –æ–ø–ª–∞—Ç–µ')]],
        resize_keyboard=True)


    add_item_button = ReplyKeyboardMarkup(keyboard=[
        [KeyboardButton(text='–î–æ–±–∞–≤–∏—Ç—å –µ—â–µ —Ç–æ–≤–∞—Ä'), KeyboardButton(text='–ü–µ—Ä–µ–π—Ç–∏ –∫ –æ–ø–ª–∞—Ç–µ')]], 
        resize_keyboard=True,
        input_field_placeholder='–í–≤–µ–¥–∏—Ç–µ –∞—Ä—Ç–∏–∫—É–ª—å')


    verifcation = ReplyKeyboardMarkup(keyboard=[
        [KeyboardButton(text='–î–∞, —ç—Ç–æ –º–æ–∏ –¥–∞–Ω–Ω—ã–µ'), KeyboardButton(text='–ù–µ—Ç, —è —Ö–æ—á—É –ø–µ—Ä–µ–ø–∏—Å–∞—Ç—å –∏—Ö')]],
        resize_keyboard=True,
        input_field_placeholder='–í—ã–±–∏—Ä–∏—Ç–µ –≤–∞—à –≤–∞—Ä–∏–∞–Ω—Ç'
    )

    go_to_pay_button = ReplyKeyboardMarkup(keyboard=[
        [KeyboardButton(text='/reg'), KeyboardButton(text='–í –º–µ–Ω—é')]],
        resize_keyboard=True
    )

    about_us = ReplyKeyboardMarkup(keyboard=[
        [KeyboardButton(text='–í –º–µ–Ω—é')]],
        resize_keyboard=True
    )



router = Router()
catalog_photo = FSInputFile('demo.jpg')


@router.message(CommandStart())
async def command_start_handler(message: Message) -> None:
    await message.answer(f"Hello! –Ø –±–æ—Ç –¥–ª–ª—è –ø—Ä–æ–¥–∞–∂–∏ –ø—Ä–µ–¥–º–µ—Ç–æ–≤ –≤ –ª–æ–∫–∞–ª—å–Ω–æ–º –º–∞–≥–∞–∑–∏–Ω–µ \n —á—Ç–æ –±—ã –ø–µ—Ä–µ–π—Ç–∏ –∫ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—é –∑–∞–∫–∞–∑–∞ –Ω–∞–ø–∏—à–∏ '–ö–æ—Ä–∑–∏–Ω–∞ üõí'", 
                         reply_markup=Buttons.menu_button)


@router.message(F.text == '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –Ω–∞—Å üìÉ‚úèÔ∏è')
async def getcatalog(message: Message):
    await message.answer('''  - Donda Clothing
        ‚Ä¢ –° —Ç–µ–∫—É—â–µ–≥–æ –º–æ–º–µ–Ω—Ç–∞ –≤—Å–µ –≤–∞—à–∏ –ø–æ—Å—ã–ª–∫–∏ –±—É–¥—É—Ç —Å–æ—Ö—Ä–∞–Ω—è—Ç—å –≥–µ—Ä–º–µ—Ç–∏—á–Ω–æ—Å—Ç—å –¥–æ –º–æ–º–µ–Ω—Ç–∞ –ø–µ—Ä–µ–¥–∞—á–∏ –≤–∞–º. –í—ã –ø–æ–ª–Ω–æ—Å—Ç—å—é —Å–∞–º–∏ –≤—Å–∫—Ä–æ–µ—Ç–µ –ø–æ—Å—ã–ª–∫—É
        ‚Ä¢ –ü–ª–æ—â–∞–¥–∫–∞ 95 - —ç—Ç–æ –∞–Ω–∞–ª–æ–≥ –≤—Å–µ–º–∏ –∏–∑–≤–µ—Å—Ç–Ω–æ–π —Ä—É—Å—Å–∫–æ–π –ø–ª–æ—â–∞–¥–∫–∏ üì±, —Ç–æ–ª—å–∫–æ –≤ –ö–∏—Ç–∞–µ. –û–≥—Ä–æ–º–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–∑–∏—Ü–∏–π –Ω–∞—á–∏–Ω–∞—è —Å –Ω–æ—Å–∫–æ–≤ Nike –∑–∞–∫–∞–Ω—á–∏–≤–∞—è Nike AJ1 Dior. –í—Å–µ –≤–µ—â–∏ –ø—Ä–æ—Ö–æ–¥—è—Ç –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–π Legit Check, —ç—Ç–∏–º –∑–∞–Ω–∏–º–∞–µ—Ç—Å—è Poizon üõí
        ‚Ä¢ –ü–ª–æ—â–∞–¥–∫–∞ Taobao, –æ –Ω–µ–π —Å–ª–æ–≤–∞ –∏–∑–ª–∏—à–Ω–∏. –¢–∞–º –≤—ã —Å–º–æ–∂–µ—Ç–µ –Ω–∞–π—Ç–∏ –∞–±—Å–æ–ª—é—Ç–Ω–æ –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ–µ. 
        ‚Ä¢ –î–æ—Å—Ç–∞–≤–∫–∞ –ø–æ –†–æ—Å—Å–∏–∏ –∏ –≤–Ω—É—Ç—Ä–∏ –í–ª–∞–¥–∏–º–∏—Ä–∞. –ú—ã –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º –æ—Ç–ø—Ä–∞–≤–∫—É –≤–∞—à–∏—Ö –ø–æ—Å—ã–ª–æ–∫ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–Ω–æ–π –∫–æ–º–ø–∞–Ω–∏–µ–π –°–î–≠–ö, –ü–æ—á—Ç–∞ –†–æ—Å—Å–∏–∏, Boxberryüì¶
        ‚Ä¢ –ö—É—Ä—å–µ—Ä –ø—Ä–∏–≤–µ–∑–µ—Ç –≤–∞—à—É –ø–æ—Å—ã–ª–∫—É –≤ —Ü–µ–ª–æ—Å—Ç–Ω–æ—Å—Ç–∏ –∏ —Å–æ—Ö—Ä–∞–Ω–Ω–æ—Å—Ç–∏. –°—Ç–æ–∏–º–æ—Å—Ç–∏ –¥–∞–Ω–Ω—ã—Ö —É—Å–ª—É–≥ —É—Ç–æ—á–Ω—è—é—Ç—Å—è –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–æü§ç

        ‚Ä¢ –ù–æ–≤–∞—è —É–¥–æ–±–Ω–∞—è –≥—Ä—É–ø–ø–∞ —Å –æ—Ç–∑—ã–≤–∞–º–∏ –¥–ª—è –Ω–∞—à–∏—Ö –Ω–æ–≤—ã—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤ ''', reply_markup=Buttons.about_us)


@router.message(F.text == '–ö–æ—Ä–∑–∏–Ω–∞ üõí')
async def get_busket(message: Message):
    await message.answer('–í—ã–±–∏—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏—è –∏–∑ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö, –¥–ª—è –ø–æ–∏—Å–∫–∞ —Ç–æ–≤–∞—Ä–æ–≤, –∏—Ö –æ–ø–∏—Å–∞–Ω–∏—è –∏ –∞—Ä—Ç–∏–∫–ª–µ–π –ø–µ—Ä–µ—Ö–æ–¥–∏—Ç–µ –≤ –Ω–∞—à—É –≥—Ä—É–ø–ø—É https://vk.******',reply_markup=Buttons.busket_button)


#    await message.answer(f'–í–∞—à —Ç–æ–≤–∞—Ä {Articules.articules_dict_name[str(articul)]} –ø–æ —Å—Ç–æ–∏–º–æ—Å—Ç–∏ - {Articules.articules_dict_prize[str(Articules.articules_dict_name[str(articul)])]}')


@router.message(F.text == '–î–æ–±–∞–≤–∏—Ç—å —Ç–æ–≤–∞—Ä')
async def func_add_item(message: Message):
    await message.answer('add item')


@router.message(F.text == '–ü–µ—Ä–µ–π—Ç–∏ –∫ –æ–ø–ª–∞—Ç–µ')
async def go_to_pay(message: Message):
    await message.answer('–°—Å—ã–ª–∫–∞ –Ω–∞ —Å—Ç—Ä–∞—Ü–Ω–∏—Ü—É —Å –æ–ø–ª–∞—Ç–æ–π')
    await message.answer('–î–ª—è –≤–≤–æ–¥–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–∞–ø–∏—à–∏—Ç–µ "/reg"', reply_markup=Buttons.go_to_pay_button)


@router.message(F.text == '–ö–æ–Ω—Ç–∞–∫—Ç üì∞')
async def get_contact(message: Message):
    await message.answer('–§—É–Ω–∫—Ü–∏—è –∫–æ–Ω—Ç–∞–∫—Ç—ã')


@router.message(F.text == '–í –º–µ–Ω—é')
async def get_menu(message: Message):
    await message.answer('you in menu', reply_markup=Buttons.menu_button)

@router.message(F.text == '–î–∞, —ç—Ç–æ –º–æ–∏ –¥–∞–Ω–Ω—ã–µ')
async def verification_true(message: Message):
    await message.answer('–í–∞—à–∏ –¥–∞–Ω–Ω—ã–µ —Å–æ–±–∏—Ä–∞—é—Ç—Å—è...')
    await message.answer(f'–ò–º—è: {name} \n–ê–¥—Ä–µ—Å: {adress} \n–û—Ñ–æ—Ä–º–∏–ª –∑–∞–∫–∞–∑ –Ω–∞ —Ç–æ–≤–∞—Ä —Å –∞—Ä—Ç–∏–∫—É–ª–µ–º "–∞—Ä—Ç–∏–∫—É–ª—å" "–Ω–µ–π–º —Ç–æ–≤–∞—Ä–∞" –ø–æ —Å—Ç–æ–∏–º–æ—Å—Ç–∏ "—Å—Ç–æ–∏–º–æ—Å—Ç—å —Ç–æ–≤–∞—Ä–∞" \n–ß–µ–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω:')
    await message.answer('–î–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –∑–∞–∫–∞–∑–∞ –ø–µ—Ä–µ—à–ª–∏—Ç–µ –¥–∞–Ω–Ω–æ–µ —Å–æ–±—â–µ–Ω–∏–µ —Å —á–µ–∫–æ–º –æ–ø–ª–∞—Ç—ã –≤ –ª–∏—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é @bot_shop_example')


@router.message(F.text == '–ù–µ—Ç, —è —Ö–æ—á—É –ø–µ—Ä–µ–ø–∏—Å–∞—Ç—å –∏—Ö')
async def not_true_verification(message: Message):
    await message.answer('–í–≤–µ–¥–∏—Ç–µ "/reg", —á—Ç–æ–±—ã –ø–µ—Ä–µ–∑–∞–ø–∏—Å–∞—Ç—å –≤–∞—à–∏ –¥–∞–Ω–Ω—ã–µ')


'''
docstring
–§—É–Ω–∫—Ü–∏ —è –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –∑–Ω–∞—á–µ–Ω–∏–µ '/reg' –∏ –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –ø–∞–µ—Ä–µ–º–µ–Ω–Ω—ã–µ adress, name –∏ –∑–∞–ø–∏—Å—ã–≤–∞–µ—Ç –∏—Ö –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
'''
@router.message(Command('reg'))
async def reg_one(message: Message, state: FSMContext):
    await state.set_state(Reg.name)
    await message.answer('–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–º—è')


@router.message(Reg.name)
async def reg_second(message: Message, state: FSMContext):
    await state.update_data(name=message.text)
    await state.set_state(Reg.number)
    await message.answer('–í–≤–µ–¥–∏—Ç–µ –∞–¥—Ä–µ—Å')


@router.message(Reg.number)
async def second_three(message: Message, state: FSMContext):
    
    global name
    global adress
    
    await state.update_data(number=message.text)
    await message.answer('–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ')
    data = await state.get_data() #{'name': 'your name', 'number': 'number'}
    name = data['name']
    adress = data['number']
    
    await message.answer(f'–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –≤–∞—à–∏ –¥–∞–Ω–Ω—ã–µ: \n –í–∞—à–µ –∏–º—è: {name}, –≤–∞—à –∞–¥—Ä–µ—Å—Å: {adress}', reply_markup=Buttons.verifcation)